// SPDX-License-Identifier: GPL-2.0-only
/*
 * Copyright (C) 2014 Texas Instruments Incorporated - https://www.ti.com/
 */

/dts-v1/;

#include "am4372.dtsi"
#include <dt-bindings/pinctrl/am43xx.h>
#include <dt-bindings/pwm/pwm.h>
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>

/ {
	model = "SC3 Automation MCBAIO1";
	compatible = "ti,am437x-idk-evm","ti,am4372","ti,am43";

	chosen {
		stdout-path = &uart0;
	};

	aliases {
		ethernet2 = &pruss1_emac0;
		ethernet3 = &pruss1_emac1;
		rtc1 = &rtc_i2c;
	};

	v24_0d: fixed-regulator-v24_0d {
		compatible = "regulator-fixed";
		regulator-name = "V24_0D";
		regulator-min-microvolt = <24000000>;
		regulator-max-microvolt = <24000000>;
		regulator-always-on;
		regulator-boot-on;
	};

	v3_3d: fixed-regulator-v3_3d {
		compatible = "regulator-fixed";
		regulator-name = "V3_3D";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-always-on;
		regulator-boot-on;
		vin-supply = <&v24_0d>;
	};

	vdd_corereg: fixed-regulator-vdd_corereg {
		compatible = "regulator-fixed";
		regulator-name = "VDD_COREREG";
		regulator-min-microvolt = <1100000>;
		regulator-max-microvolt = <1100000>;
		regulator-always-on;
		regulator-boot-on;
		vin-supply = <&v24_0d>;
	};

	vdd_core: fixed-regulator-vdd_core {
		compatible = "regulator-fixed";
		regulator-name = "VDD_CORE";
		regulator-min-microvolt = <1100000>;
		regulator-max-microvolt = <1100000>;
		regulator-always-on;
		regulator-boot-on;
		vin-supply = <&vdd_corereg>;
	};

	v1_8dreg: fixed-regulator-v1_8dreg{
		compatible = "regulator-fixed";
		regulator-name = "V1_8DREG";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		regulator-always-on;
		regulator-boot-on;
		vin-supply = <&v24_0d>;
	};

	v1_8d: fixed-regulator-v1_8d{
		compatible = "regulator-fixed";
		regulator-name = "V1_8D";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		regulator-always-on;
		regulator-boot-on;
		vin-supply = <&v1_8dreg>;
	};

	v1_5dreg: fixed-regulator-v1_5dreg{
		compatible = "regulator-fixed";
		regulator-name = "V1_5DREG";
		regulator-min-microvolt = <1500000>;
		regulator-max-microvolt = <1500000>;
		regulator-always-on;
		regulator-boot-on;
		vin-supply = <&v24_0d>;
	};

	v1_5d: fixed-regulator-v1_5d{
		compatible = "regulator-fixed";
		regulator-name = "V1_5D";
		regulator-min-microvolt = <1500000>;
		regulator-max-microvolt = <1500000>;
		regulator-always-on;
		regulator-boot-on;
		vin-supply = <&v1_5dreg>;
	};

	/* fixed 32k external oscillator clock */
	clk_32k_rtc: clk_32k_rtc {
		#clock-cells = <0>;
		compatible = "fixed-clock";
		clock-frequency = <32768>;
	};

	/* Dual-MAC Ethernet application node on PRU-ICSS1 */
	pruss1-eth {
		compatible = "ti,am4376-prueth";
		ti,prus = <&pru1_0>, <&pru1_1>;
		sram = <&ocmcram>;
		interrupt-parent = <&pruss1_intc>;
		mii-rt = <&pruss1_mii_rt>;
		iep = <&pruss1_iep>;

		pinctrl-0 = <&pruss1_eth_default>;
		pinctrl-names = "default";
		interrupts = <20 2 2>, <21 3 3>;
		interrupt-names = "rx_lre_hp", "rx_lre_lp";

		pruss1_emac0: ethernet-mii0 {
			phy-handle = <&pruss1_eth0_phy>;
			phy-mode = "mii";
			interrupts = <20 2 2>;
			interrupt-names = "rx";
			ti,no-half-duplex;
			/* Filled in by bootloader */
			local-mac-address = [00 00 00 00 00 00];
		};

		pruss1_emac1: ethernet-mii1 {
			phy-handle = <&pruss1_eth1_phy>;
			phy-mode = "mii";
			interrupts = <21 3 3>;
			interrupt-names = "rx";
			ti,no-half-duplex;
			/* Filled in by bootloader */
			local-mac-address = [00 00 00 00 00 00];
		};
	};
};

&am43xx_pinmux {
	i2c0_pins_default: i2c0_pins_default {
		pinctrl-single,pins = <
			AM4372_IOPAD(0x988, PIN_INPUT_PULLUP | SLEWCTRL_FAST | MUX_MODE0) /* (Y22) i2c0_sda.i2c0_sda */
			AM4372_IOPAD(0x98c, PIN_INPUT_PULLUP | SLEWCTRL_FAST | MUX_MODE0) /* (AB24) i2c0_scl.i2c0_scl */
		>;
	};

	i2c1_pins_default: i2c1_pins_default {
		pinctrl-single,pins = <
			AM4372_IOPAD(0xa0c, PIN_INPUT_PULLUP | MUX_MODE3) /* (AB18) cam0_data1.I2C1_SCL */
			AM4372_IOPAD(0xa08, PIN_INPUT_PULLUP | MUX_MODE3) /* (AE18) cam0_data0.I2C1_SDA */
		>;
	};

//	i2c2_pins_default: i2c2_pins_default {
//		pinctrl-single,pins = <
//			AM4372_IOPAD(0x9e8, PIN_INPUT_PULLUP | SLEWCTRL_FAST | MUX_MODE3) /* cam1_data1.i2c2_scl */
//			AM4372_IOPAD(0x9ec, PIN_INPUT_PULLUP | SLEWCTRL_FAST | MUX_MODE3) /* cam1_data0.i2c2_sda */
//		>;
//	};
//
//	i2c2_pins_sleep: i2c2_pins_sleep {
//		pinctrl-single,pins = <
//			AM4372_IOPAD(0x9e8, PIN_INPUT_PULLUP | MUX_MODE7)
//			AM4372_IOPAD(0x9ec, PIN_INPUT_PULLUP | MUX_MODE7)
//		>;
//	};

	mmc0_pins_default: pinmux_mmc0_pins_default {
		pinctrl-single,pins = <
			AM4372_IOPAD(0x900, PIN_INPUT | MUX_MODE0) /* (D1) mmc0_clk.mmc0_clk */
			AM4372_IOPAD(0x904, PIN_INPUT_PULLUP | MUX_MODE0) /* (D2) mmc0_cmd.mmc0_cmd */
			AM4372_IOPAD(0x8fc, PIN_INPUT_PULLUP | MUX_MODE0) /* (C1) mmc0_dat0.mmc0_dat0 */
			AM4372_IOPAD(0x8f8, PIN_INPUT_PULLUP | MUX_MODE0) /* (C2) mmc0_dat1.mmc0_dat1 */
			AM4372_IOPAD(0x8f4, PIN_INPUT_PULLUP | MUX_MODE0) /* (B2) mmc0_dat2.mmc0_dat2 */
			AM4372_IOPAD(0x8f0, PIN_INPUT_PULLUP | MUX_MODE0) /* (B1) mmc0_dat3.mmc0_dat3 */
			AM4372_IOPAD(0x960, PIN_INPUT_PULLUP | MUX_MODE5) /* (R25) spi0_cs1.mmc0_sdcd */
		>;
	};

	mmc0_pins_sleep: pinmux_mmc0_pins_sleep {
		pinctrl-single,pins = <
			AM4372_IOPAD(0x900, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (D1) mmc0_clk.mmc0_clk */
			AM4372_IOPAD(0x904, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (D2) mmc0_cmd.mmc0_cmd */
			AM4372_IOPAD(0x8fc, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (C1) mmc0_dat0.mmc0_dat0 */
			AM4372_IOPAD(0x8f8, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (C2) mmc0_dat1.mmc0_dat1 */
			AM4372_IOPAD(0x8f4, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (B2) mmc0_dat2.mmc0_dat2 */
			AM4372_IOPAD(0x8f0, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (B1) mmc0_dat3.mmc0_dat3 */
			AM4372_IOPAD(0x960, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (R25) spi0_cs1.mmc0_sdcd */
		>;
	};

	mmc1_pins_default: mmc1_pins_default {
		pinctrl-single,pins = <
			AM4372_IOPAD(0x880, PIN_INPUT | MUX_MODE2) /* (B9) gpmc_csn1.mmc1_clk */
			AM4372_IOPAD(0x884, PIN_INPUT_PULLUP | MUX_MODE2) /* (F10) gpmc_csn2.mmc1_cmd */
			AM4372_IOPAD(0x820, PIN_INPUT_PULLUP | MUX_MODE2) /* (B10) gpmc_ad8.mmc1_dat0 */
			AM4372_IOPAD(0x824, PIN_INPUT_PULLUP | MUX_MODE2) /* (A10) gpmc_ad9.mmc1_dat1 */
			AM4372_IOPAD(0x828, PIN_INPUT_PULLUP | MUX_MODE2) /* (F11) gpmc_ad10.mmc1_dat2 */
			AM4372_IOPAD(0x82c, PIN_INPUT_PULLUP | MUX_MODE2) /* (D11) gpmc_ad11.mmc1_dat3 */
			AM4372_IOPAD(0x830, PIN_INPUT_PULLUP | MUX_MODE2) /* (E11) gpmc_ad12.mmc1_dat4 */
			AM4372_IOPAD(0x834, PIN_INPUT_PULLUP | MUX_MODE2) /* (C11) gpmc_ad13.mmc1_dat5 */
			AM4372_IOPAD(0x838, PIN_INPUT_PULLUP | MUX_MODE2) /* (B11) gpmc_ad14.mmc1_dat6 */
			AM4372_IOPAD(0x83c, PIN_INPUT_PULLUP | MUX_MODE2) /* (A11) gpmc_ad15.mmc1_dat7 */
		>;
	};

	mmc1_pins_sleep: mmc1_pins_sleep {
		pinctrl-single,pins = <
			AM4372_IOPAD(0x880, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (B9) gpmc_csn1.mmc1_clk */
			AM4372_IOPAD(0x884, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (F10) gpmc_csn2.mmc1_cmd */
			AM4372_IOPAD(0x820, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (B10) gpmc_ad8.mmc1_dat0 */
			AM4372_IOPAD(0x824, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (A10) gpmc_ad9.mmc1_dat1 */
			AM4372_IOPAD(0x828, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (F11) gpmc_ad10.mmc1_dat2 */
			AM4372_IOPAD(0x82c, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (D11) gpmc_ad11.mmc1_dat3 */
			AM4372_IOPAD(0x830, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (E11) gpmc_ad12.mmc1_dat4 */
			AM4372_IOPAD(0x834, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (C11) gpmc_ad13.mmc1_dat5 */
			AM4372_IOPAD(0x838, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (B11) gpmc_ad14.mmc1_dat6 */
			AM4372_IOPAD(0x83c, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (A11) gpmc_ad15.mmc1_dat7 */
		>;
	};

	spi1_pins_default: spi1_pins_default {
		pinctrl-single,pins = <
			AM4372_IOPAD(0x908, PIN_INPUT | MUX_MODE2)	/* mii1_col.spi1_sclk */
			AM4372_IOPAD(0x910, PIN_INPUT | MUX_MODE2)	/* mii1_rx_er.spi1_d1 */
			AM4372_IOPAD(0x944, PIN_OUTPUT | MUX_MODE2)	/* rmii1_ref_clk.spi1_cs0 */
			AM4372_IOPAD(0x90c, PIN_OUTPUT | MUX_MODE7)	/* mii1_crs.gpio3_1 */
		>;
	};

	spi1_pins_sleep: spi1_pins_sleep {
		pinctrl-single,pins = <
			AM4372_IOPAD(0x908, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM4372_IOPAD(0x910, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM4372_IOPAD(0x944, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM4372_IOPAD(0x90c, PIN_INPUT_PULLDOWN | MUX_MODE7)
		>;
	};

	cpsw_default: cpsw_default {
		pinctrl-single,pins = <
			/* Slave 1 */
			AM4372_IOPAD(0x92c, PIN_OUTPUT | MUX_MODE2)	/* mii1_txclk.rgmii1_tclk */
			AM4372_IOPAD(0x914, PIN_OUTPUT | MUX_MODE2)	/* mii1_txen.rgmii1_tctl */
			AM4372_IOPAD(0x928, PIN_OUTPUT | MUX_MODE2)	/* mii1_txd0.rgmii1_td0 */
			AM4372_IOPAD(0x924, PIN_OUTPUT | MUX_MODE2)	/* mii1_txd1.rgmii1_td1 */
			AM4372_IOPAD(0x920, PIN_OUTPUT | MUX_MODE2)	/* mii1_txd0.rgmii1_td2 */
			AM4372_IOPAD(0x91c, PIN_OUTPUT | MUX_MODE2)	/* mii1_txd1.rgmii1_td3 */
			AM4372_IOPAD(0x930, PIN_INPUT | MUX_MODE2)	/* mii1_rxclk.rmii1_rclk */
			AM4372_IOPAD(0x918, PIN_INPUT | MUX_MODE2)	/* mii1_rxdv.rgmii1_rctl */
			AM4372_IOPAD(0x940, PIN_INPUT | MUX_MODE2)	/* mii1_rxd0.rgmii1_rd0 */
			AM4372_IOPAD(0x93c, PIN_INPUT | MUX_MODE2)	/* mii1_rxd1.rgmii1_rd1 */
			AM4372_IOPAD(0x938, PIN_INPUT | MUX_MODE2)	/* mii1_rxd0.rgmii1_rd2 */
			AM4372_IOPAD(0x934, PIN_INPUT | MUX_MODE2)	/* mii1_rxd1.rgmii1_rd3 */

			/* Slave 2 */
			AM4372_IOPAD(0x858, PIN_OUTPUT | MUX_MODE2)	/* gpmc_a6.rgmii2_tclk */
			AM4372_IOPAD(0x840, PIN_OUTPUT | MUX_MODE2)	/* gpmc_a0.rgmii2_tctl */
			AM4372_IOPAD(0x854, PIN_OUTPUT | MUX_MODE2)	/* gpmc_a5.rgmii2_td0 */
			AM4372_IOPAD(0x850, PIN_OUTPUT | MUX_MODE2)	/* gpmc_a4.rgmii2_td1 */
			AM4372_IOPAD(0x84c, PIN_OUTPUT | MUX_MODE2)	/* gpmc_a3.rgmii2_td2 */
			AM4372_IOPAD(0x848, PIN_OUTPUT | MUX_MODE2)	/* gpmc_a2.rgmii2_td3 */
			AM4372_IOPAD(0x85c, PIN_INPUT | MUX_MODE2)	/* gpmc_a7.rgmii2_rclk */
			AM4372_IOPAD(0x844, PIN_INPUT | MUX_MODE2)	/* gpmc_a1.rgmii2_rtcl */
			AM4372_IOPAD(0x86c, PIN_INPUT | MUX_MODE2)	/* gpmc_a11.rgmii2_rd0 */
			AM4372_IOPAD(0x868, PIN_INPUT | MUX_MODE2)	/* gpmc_a10.rgmii2_rd1 */
			AM4372_IOPAD(0x864, PIN_INPUT | MUX_MODE2)	/* gpmc_a9.rgmii2_rd2 */
			AM4372_IOPAD(0x860, PIN_INPUT | MUX_MODE2)	/* gpmc_a8.rgmii2_rd3 */
		>;
	};

	cpsw_sleep: cpsw_sleep {
		pinctrl-single,pins = <
			/* Slave 1 reset value */
			AM4372_IOPAD(0x92c, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM4372_IOPAD(0x914, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM4372_IOPAD(0x928, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM4372_IOPAD(0x924, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM4372_IOPAD(0x920, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM4372_IOPAD(0x91c, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM4372_IOPAD(0x930, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM4372_IOPAD(0x918, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM4372_IOPAD(0x940, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM4372_IOPAD(0x93c, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM4372_IOPAD(0x938, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM4372_IOPAD(0x934, PIN_INPUT_PULLDOWN | MUX_MODE7)

			/* Slave 2 reset value */
			AM4372_IOPAD(0x858, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM4372_IOPAD(0x840, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM4372_IOPAD(0x854, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM4372_IOPAD(0x850, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM4372_IOPAD(0x84c, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM4372_IOPAD(0x848, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM4372_IOPAD(0x85c, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM4372_IOPAD(0x844, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM4372_IOPAD(0x86c, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM4372_IOPAD(0x868, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM4372_IOPAD(0x864, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM4372_IOPAD(0x860, PIN_INPUT_PULLDOWN | MUX_MODE7)
		>;
	};

	davinci_mdio_default: davinci_mdio_default {
		pinctrl-single,pins = <
			/* MDIO */
			AM4372_IOPAD(0x948, PIN_INPUT | SLEWCTRL_FAST | MUX_MODE0)	/* mdio_data.mdio_data */
			AM4372_IOPAD(0x94c, PIN_OUTPUT | MUX_MODE0)			/* mdio_clk.mdio_clk */
		>;
	};

	davinci_mdio_sleep: davinci_mdio_sleep {
		pinctrl-single,pins = <
			/* MDIO reset value */
			AM4372_IOPAD(0x948, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM4372_IOPAD(0x94c, PIN_INPUT_PULLDOWN | MUX_MODE7)
		>;
	};

	spi2_pins_default: spi2_pins_default {
		pinctrl-single,pins = <
			AM4372_IOPAD(0x9b8, PIN_INPUT | MUX_MODE4) /* (AC18) cam0_field.spi2_sclk */
			AM4372_IOPAD(0x9bc, PIN_OUTPUT | MUX_MODE4) /* (AD17) cam0_wen.spi2_d0 */
			AM4372_IOPAD(0x9b4, PIN_INPUT_PULLUP | MUX_MODE4) /* (AD18) cam0_vd.spi2_d1 */
			AM4372_IOPAD(0x9c0, PIN_OUTPUT | MUX_MODE4) /* (AC20) cam0_pclk.spi2_cs0 */
			AM4372_IOPAD(0x9b0, PIN_OUTPUT | MUX_MODE4) /* (AE17) cam0_hd.spi2_cs1 */
			AM4372_IOPAD(0x9c4, PIN_OUTPUT | MUX_MODE4) /* (AB19) cam0_data8.spi2_cs2 */
			AM4372_IOPAD(0x9c8, PIN_OUTPUT | MUX_MODE4) /* (AA19) cam0_data9.spi2_cs3 */
		>;
	};

	spi4_pins_default: spi4_pins_default {
		pinctrl-single,pins = <
			AM4372_IOPAD(0xa50, PIN_INPUT | MUX_MODE0) /* (P25) spi4_sclk.spi4_sclk */
			AM4372_IOPAD(0xa54, PIN_OUTPUT | MUX_MODE0) /* (R24) spi4_d0.spi4_d0 */
			AM4372_IOPAD(0xa58, PIN_INPUT_PULLUP | MUX_MODE0) /* (P24) spi4_d1.spi4_d1 */
			AM4372_IOPAD(0xa5c, PIN_OUTPUT | MUX_MODE0) /* (N25) spi4_cs0.spi4_cs0 */
		>;
	};

	pruss1_mdio_default: pruss1-mdio-default {
		pinctrl-single,pins = <
			AM4372_IOPAD(0x88c, (PIN_OUTPUT | MUX_MODE5))		/* gpmc_clk.pr1_mdio_mdclk */
			AM4372_IOPAD(0xa70, (PIN_INPUT_PULLUP  | MUX_MODE8))		/* xdma_event_intr0.pr1_mdio_data */
			AM4372_IOPAD(0xa00, (PIN_INPUT_PULLUP | MUX_MODE7))	/* cam1_data6.gpio4_20 */
		>;
	};

	pruss1_eth_default: pruss1-eth-default {
		pinctrl-single,pins = <
			AM4372_IOPAD(0x8a0, (PIN_INPUT  | MUX_MODE2))	/* dss_data0.pr1_mii_mt0_clk */
			AM4372_IOPAD(0x8b4, (PIN_OUTPUT | MUX_MODE2))	/* dss_data5.pr1_mii0_txd0 */
			AM4372_IOPAD(0x8b0, (PIN_OUTPUT | MUX_MODE2))	/* dss_data4.pr1_mii0_txd1 */
			AM4372_IOPAD(0x8ac, (PIN_OUTPUT | MUX_MODE2))	/* dss_data3.pr1_mii0_txd2 */
			AM4372_IOPAD(0x8a8, (PIN_OUTPUT | MUX_MODE2))	/* dss_data2.pr1_mii0_txd3 */
			AM4372_IOPAD(0x8cc, (PIN_INPUT  | MUX_MODE5))	/* dss_data11.pr1_mii0_rxd0 */
			AM4372_IOPAD(0x8c8, (PIN_INPUT  | MUX_MODE5))	/* dss_data10.pr1_mii0_rxd1 */
			AM4372_IOPAD(0x8c4, (PIN_INPUT  | MUX_MODE5))	/* dss_data9.pr1_mii0_rxd2 */
			AM4372_IOPAD(0x8c0, (PIN_INPUT  | MUX_MODE5))	/* dss_data8.pr1_mii0_rxd3 */
			AM4372_IOPAD(0x8a4, (PIN_OUTPUT | MUX_MODE2))	/* dss_data1.pr1_mii0_txen */
			AM4372_IOPAD(0x8d8, (PIN_INPUT  | MUX_MODE5))	/* dss_data14.pr1_mii_mr0_clk */
			AM4372_IOPAD(0x8dc, (PIN_INPUT  | MUX_MODE5))	/* dss_data15.pr1_mii0_rxdv */
			AM4372_IOPAD(0x8d4, (PIN_INPUT  | MUX_MODE5))	/* dss_data13.pr1_mii0_rxer */
			AM4372_IOPAD(0x8d0, (PIN_INPUT  | MUX_MODE5))	/* dss_data12.pr1_mii0_rxlink */
			AM4372_IOPAD(0xa40, (PIN_INPUT  | MUX_MODE5))	/* gpio5_10.pr1_mii0_crs */
			AM4372_IOPAD(0xa38, (PIN_INPUT  | MUX_MODE5))	/* gpio5_8.pr1_mii0_col */
			AM4372_IOPAD(0x858, (PIN_INPUT  | MUX_MODE5))	/* gpmc_a6.pr1_mii_mt1_clk */
			AM4372_IOPAD(0x854, (PIN_OUTPUT | MUX_MODE5))	/* gpmc_a5.pr1_mii1_txd0 */
			AM4372_IOPAD(0x850, (PIN_OUTPUT | MUX_MODE5))	/* gpmc_a4.pr1_mii1_txd1 */
			AM4372_IOPAD(0x84c, (PIN_OUTPUT | MUX_MODE5))	/* gpmc_a3.pr1_mii1_txd2 */
			AM4372_IOPAD(0x848, (PIN_OUTPUT | MUX_MODE5))	/* gpmc_a2.pr1_mii1_txd3 */
			AM4372_IOPAD(0x86c, (PIN_INPUT  | MUX_MODE5))	/* gpmc_a11.pr1_mii1_rxd0 */
			AM4372_IOPAD(0x868, (PIN_INPUT  | MUX_MODE5))	/* gpmc_a10.pr1_mii1_rxd1 */
			AM4372_IOPAD(0x864, (PIN_INPUT  | MUX_MODE5))	/* gpmc_a9.pr1_mii1_rxd2 */
			AM4372_IOPAD(0x860, (PIN_INPUT  | MUX_MODE5))	/* gpmc_a8.pr1_mii1_rxd3 */
			AM4372_IOPAD(0x840, (PIN_OUTPUT | MUX_MODE5))	/* gpmc_a0.pr1_mii1_txen */
			AM4372_IOPAD(0x85c, (PIN_INPUT  | MUX_MODE5))	/* gpmc_a7.pr1_mii_mr1_clk */
			AM4372_IOPAD(0x844, (PIN_INPUT  | MUX_MODE5))	/* gpmc_a1.pr1_mii1_rxdv */
			AM4372_IOPAD(0x874, (PIN_INPUT  | MUX_MODE5))	/* gpmc_wpn.pr1_mii1_rxer */
			AM4372_IOPAD(0xa4c, (PIN_INPUT  | MUX_MODE5))	/* gpio5_13.pr1_mii1_rxlink */
			AM4372_IOPAD(0xa44, (PIN_INPUT  | MUX_MODE5))	/* gpio5_11.pr1_mii1_crs */
			AM4372_IOPAD(0x878, (PIN_INPUT  | MUX_MODE5))	/* gpmc_be1n.pr1_mii1_col */
		>;
	};

	qspi_pins_default: qspi_pins_default {
		pinctrl-single,pins = <
			AM4372_IOPAD(0x87c, PIN_OUTPUT_PULLUP | MUX_MODE3)	/* gpmc_csn0.qspi_csn */
			AM4372_IOPAD(0x888, PIN_OUTPUT | MUX_MODE2)		/* gpmc_csn3.qspi_clk */
			AM4372_IOPAD(0x890, PIN_INPUT_PULLUP | MUX_MODE3)	/* gpmc_advn_ale.qspi_d0 */
			AM4372_IOPAD(0x894, PIN_INPUT_PULLUP | MUX_MODE3)	/* gpmc_oen_ren.qspi_d1 */
			AM4372_IOPAD(0x898, PIN_INPUT_PULLUP | MUX_MODE3)	/* gpmc_wen.qspi_d2 */
			AM4372_IOPAD(0x89c, PIN_INPUT_PULLUP | MUX_MODE3)	/* gpmc_be0n_cle.qspi_d3 */
		>;
	};

	qspi_pins_sleep: qspi_pins_sleep{
		pinctrl-single,pins = <
			AM4372_IOPAD(0x87c, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM4372_IOPAD(0x888, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM4372_IOPAD(0x890, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM4372_IOPAD(0x894, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM4372_IOPAD(0x898, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM4372_IOPAD(0x89c, PIN_INPUT_PULLDOWN | MUX_MODE7)
		>;
	};

	ehrpwm_4_pins_default: ehrpwm_4_pins_default {
		pinctrl-single,pins = <
			AM4372_IOPAD(0xa28, PIN_OUTPUT | MUX_MODE6) /* (H25) uart3_rxd.ehrpwm4A */
		>;
	};

	ehrpwm_5_pins_default: ehrpwm_5_pins_default {
		pinctrl-single,pins = <
			AM4372_IOPAD(0xa30, PIN_OUTPUT | MUX_MODE6) /* (H22) uart3_ctsn.ehrpwm5A */
		>;
	};
};

&i2c0 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&i2c0_pins_default>;
	clock-frequency = <400000>;

	eeprom@50 {
		compatible = "microchip,24c02";
		pagesize = <16>;
		reg = <0x50>;
	};

	rtc_i2c: rtc@32 {
		compatible = "microcrystal,rv8803";
		reg = <0x32>;
	};

	tmp102: tmp102@48 {
		compatible = "ti,tmp102";
		reg = <0x48>;

		#thermal-sensor-cells = <0>;
	};

	tps: tps65218@24 {
		compatible = "ti,tps65218";
		reg = <0x24>;
		interrupts = <GIC_SPI 7 IRQ_TYPE_LEVEL_HIGH>;
		interrupt-controller;
		#interrupt-cells = <2>;

		dcdc1: regulator-dcdc1 {
			/* VDD_CORE limits min of OPP50 and max of OPP100 */
			regulator-name = "vdd_core";
			regulator-min-microvolt = <912000>;
			regulator-max-microvolt = <1144000>;
			regulator-boot-on;
			regulator-always-on;
		};

		dcdc2: regulator-dcdc2 {
			/* VDD_MPU limits min of OPP50 and max of OPP_NITRO */
			regulator-name = "vdd_mpu";
			regulator-min-microvolt = <912000>;
			regulator-max-microvolt = <1378000>;
			regulator-boot-on;
			regulator-always-on;
		};

		dcdc3: regulator-dcdc3 {
			regulator-name = "vdds_ddr";
			regulator-boot-on;
			regulator-always-on;
			regulator-state-mem {
				regulator-on-in-suspend;
			};
			regulator-state-disk {
				regulator-off-in-suspend;
			};
		};

		dcdc4: regulator-dcdc4 {
			regulator-name = "v3_3d";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			regulator-boot-on;
			regulator-always-on;
		};

		dcdc5: regulator-dcdc5 {
			compatible = "ti,tps65218-dcdc5";
			regulator-name = "v1_0bat";
			regulator-min-microvolt = <1000000>;
			regulator-max-microvolt = <1000000>;
			regulator-boot-on;
			regulator-always-on;
			regulator-state-mem {
				regulator-on-in-suspend;
			};
		};

		dcdc6: regulator-dcdc6 {
			compatible = "ti,tps65218-dcdc6";
			regulator-name = "v1_8bat";
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <1800000>;
			regulator-boot-on;
			regulator-always-on;
			regulator-state-mem {
				regulator-on-in-suspend;
			};
		};

		ldo1: regulator-ldo1 {
			regulator-name = "v1_8d";
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <1800000>;
			regulator-boot-on;
			regulator-always-on;
		};

		power-button {
			compatible = "ti,tps65218-pwrbutton";
			status = "okay";
			interrupts = <3 IRQ_TYPE_EDGE_BOTH>;
		};
	};
};

&i2c1 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&i2c1_pins_default>;
	clock-frequency = <400000>;
};

&i2c2 {
	status = "okay";
//	pinctrl-names = "default", "sleep";
//	pinctrl-0 = <&i2c2_pins_default>;
//	pinctrl-1 = <&i2c2_pins_sleep>;
//	clock-frequency = <100000>;
//
//	tpic2810: tpic2810@60 {
//		compatible = "ti,tpic2810";
//		reg = <0x60>;
//		gpio-controller;
//		#gpio-cells = <2>;
//	};
};

&spi1 {
	status = "okay";
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&spi1_pins_default>;
	pinctrl-1 = <&spi1_pins_sleep>;
	ti,pindir-d0-out-d1-in;
};

&spi2 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&spi2_pins_default>;
	ti,spi-num-cs = <4>;
	ti,pindir-d0-out-d1-in;

	spidev@1 {
		status = "okay";
		compatible = "linux,spidev";
		spi-max-frequency = <1000000>;
		reg = <1>;
	};
};

&spi3 {
	status = "okay";
};

&spi4 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&spi4_pins_default>;
//	ti,spi-num-cs = <4>;
	ti,pindir-d0-out-d1-in;

	spidev@0 {
		status = "okay";
		compatible = "linux,spidev";
		spi-max-frequency = <1000000>;
		reg = <0>;
	};
};

&epwmss4 {
	status = "okay";
};

&ehrpwm4 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&ehrpwm_4_pins_default>;
};

&epwmss5 {
	status = "okay";
};

&ehrpwm5 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&ehrpwm_5_pins_default>;
};

&gpio0 {
	status = "okay";
	pinctrl-single,pins = <
		AM4372_IOPAD(0x948, PIN_OUTPUT | MUX_MODE7) /* (A17) mdio_data.gpio0[0] */
		AM4372_IOPAD(0x94c, PIN_OUTPUT | MUX_MODE7) /* (B17) mdio_clk.gpio0[1] */
		AM4372_IOPAD(0x950, PIN_INPUT_PULLUP | MUX_MODE7) /* (P23) spi0_sclk.gpio0[2] */
		AM4372_IOPAD(0x954, PIN_OUTPUT | MUX_MODE7) /* (T22) spi0_d0.gpio0[3] */
		AM4372_IOPAD(0x958, PIN_INPUT_PULLUP | MUX_MODE7) /* (T21) spi0_d1.gpio0[4] */
		AM4372_IOPAD(0x95c, PIN_OUTPUT | MUX_MODE7) /* (T20) spi0_cs0.gpio0[5] */
		AM4372_IOPAD(0x964, PIN_OUTPUT | MUX_MODE7) /* (G24) eCAP0_in_PWM0_out.gpio0[7] */
		AM4372_IOPAD(0x978, PIN_OUTPUT | MUX_MODE7) /* (K22) uart1_ctsn.gpio0[12] */
		AM4372_IOPAD(0x97c, PIN_OUTPUT | MUX_MODE7) /* (L22) uart1_rtsn.gpio0[13] */
		AM4372_IOPAD(0x980, PIN_OUTPUT | MUX_MODE7) /* (K21) uart1_rxd.gpio0[14] */
		AM4372_IOPAD(0x984, PIN_INPUT_PULLUP | MUX_MODE7) /* (L21) uart1_txd.gpio0[15] */
		AM4372_IOPAD(0xac0, PIN_OUTPUT | MUX_MODE7) /* (G21) USB0_DRVVBUS.gpio0[18] */
		AM4372_IOPAD(0xa78, PIN_OUTPUT | MUX_MODE7) /* (H20) clkreq.gpio0[24] */
		AM4372_IOPAD(0x944, PIN_INPUT_PULLUP | MUX_MODE7) /* (A16) rmii1_ref_clk.gpio0[29] */
	>;
};

&gpio1 {
	status = "okay";
	pinctrl-single,pins = <
		AM4372_IOPAD(0x800, PIN_OUTPUT | MUX_MODE7) /* (B5) gpmc_ad0.gpio1[0] */
		AM4372_IOPAD(0x804, PIN_OUTPUT | MUX_MODE7) /* (A5) gpmc_ad1.gpio1[1] */
		AM4372_IOPAD(0x808, PIN_OUTPUT | MUX_MODE7) /* (B6) gpmc_ad2.gpio1[2] */
		AM4372_IOPAD(0x80c, PIN_OUTPUT | MUX_MODE7) /* (A6) gpmc_ad3.gpio1[3] */
		AM4372_IOPAD(0x810, PIN_OUTPUT | MUX_MODE7) /* (B7) gpmc_ad4.gpio1[4] */
		AM4372_IOPAD(0x814, PIN_OUTPUT | MUX_MODE7) /* (A7) gpmc_ad5.gpio1[5] */
		AM4372_IOPAD(0x818, PIN_OUTPUT | MUX_MODE7) /* (C8) gpmc_ad6.gpio1[6] */
		AM4372_IOPAD(0x81c, PIN_OUTPUT | MUX_MODE7) /* (B8) gpmc_ad7.gpio1[7] */
		AM4372_IOPAD(0x968, PIN_OUTPUT | MUX_MODE7) /* (L25) uart0_ctsn.gpio1[8] */
		AM4372_IOPAD(0x96c, PIN_OUTPUT | MUX_MODE7) /* (J25) uart0_rtsn.gpio1[9] */
		AM4372_IOPAD(0x878, PIN_OUTPUT | MUX_MODE7) /* (A3) gpmc_be1n.gpio1[28] */
	>;
};

&gpio2 {
	status = "okay";
	pinctrl-single,pins = <
		AM4372_IOPAD(0x8b8, PIN_INPUT | MUX_MODE7) /* (C20) dss_data6.gpio2[12] */
		AM4372_IOPAD(0x8bc, PIN_INPUT | MUX_MODE7) /* (E19) dss_data7.gpio2[13] */
		AM4372_IOPAD(0x8e0, PIN_INPUT | MUX_MODE7) /* (B23) dss_vsync.gpio2[22] */
		AM4372_IOPAD(0x8e4, PIN_INPUT | MUX_MODE7) /* (A23) dss_hsync.gpio2[23] */
		AM4372_IOPAD(0x8e8, PIN_INPUT | MUX_MODE7) /* (A22) dss_pclk.gpio2[24] */
		AM4372_IOPAD(0x8ec, PIN_INPUT | MUX_MODE7) /* (A24) dss_ac_bias_en.gpio2[25] */
	>;	
};

&gpio3 {
	status = "okay";
	pinctrl-single,pins = <
		AM4372_IOPAD(0x908, PIN_OUTPUT | MUX_MODE7) /* (D16) mii1_col.gpio3[0] */
		AM4372_IOPAD(0x90c, PIN_OUTPUT | MUX_MODE7) /* (B14) mii1_crs.gpio3[1] */
		AM4372_IOPAD(0x910, PIN_OUTPUT | MUX_MODE7) /* (B13) mii1_rx_er.gpio3[2] */
		AM4372_IOPAD(0xac4, PIN_OUTPUT | MUX_MODE7) /* (F25) USB1_DRVVBUS.gpio3[13] */
		AM4372_IOPAD(0x990, PIN_INPUT_PULLUP | MUX_MODE7) /* (N24) mcasp0_aclkx.gpio3[14] */
		AM4372_IOPAD(0x994, PIN_INPUT_PULLUP | MUX_MODE7) /* (N22) mcasp0_fsx.gpio3[15] */
		AM4372_IOPAD(0x998, PIN_OUTPUT | MUX_MODE7) /* (H23) mcasp0_axr0.gpio3[16] */
		AM4372_IOPAD(0x99c, PIN_OUTPUT | MUX_MODE7) /* (M24) mcasp0_ahclkr.gpio3[17] */
		AM4372_IOPAD(0x9a0, PIN_OUTPUT | MUX_MODE7) /* (L23) mcasp0_aclkr.gpio3[18] */
		AM4372_IOPAD(0x9a4, PIN_OUTPUT | MUX_MODE7) /* (K23) mcasp0_fsr.gpio3[19] */
		AM4372_IOPAD(0x9a8, PIN_OUTPUT | MUX_MODE7) /* (M25) mcasp0_axr1.gpio3[20] */
		AM4372_IOPAD(0x9ac, PIN_OUTPUT | MUX_MODE7) /* (L24) mcasp0_ahclkx.gpio3[21] */
		AM4372_IOPAD(0xa64, PIN_OUTPUT | MUX_MODE7) /* (P22) spi2_d0.gpio3[22] */
		AM4372_IOPAD(0xa68, PIN_OUTPUT | MUX_MODE7) /* (P20) spi2_d1.gpio3[23] */
		AM4372_IOPAD(0xa60, PIN_OUTPUT | MUX_MODE7) /* (N20) spi2_sclk.gpio3[24] */
		AM4372_IOPAD(0xa6c, PIN_OUTPUT | MUX_MODE7) /* (T23) spi2_cs0.gpio3[25] */
	>;
};

&gpio4 {
	status = "okay";
	pinctrl-single,pins = <
		AM4372_IOPAD(0x9cc, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (AC24) cam1_data9.gpio4[7] */
		AM4372_IOPAD(0x9d0, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (AD24) cam1_data8.gpio4[8] */
		AM4372_IOPAD(0x9d4, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (AD25) cam1_hd.gpio4[9] */
		AM4372_IOPAD(0x9d8, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (AC23) cam1_vd.gpio4[10] */
		AM4372_IOPAD(0x9dc, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (AE21) cam1_pclk.gpio4[11] */
		AM4372_IOPAD(0x9e0, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (AC25) cam1_field.gpio4[12] */
		AM4372_IOPAD(0x9e4, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (AB25) cam1_wen.gpio4[13] */
		AM4372_IOPAD(0x9e8, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (AB20) cam1_data0.gpio4[14] */
		AM4372_IOPAD(0x9ec, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (AC21) cam1_data1.gpio4[15] */
		AM4372_IOPAD(0x9f0, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (AD21) cam1_data2.gpio4[16] */
		AM4372_IOPAD(0x9f4, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (AE22) cam1_data3.gpio4[17] */
		AM4372_IOPAD(0x9f8, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (AD22) cam1_data4.gpio4[18] */
		AM4372_IOPAD(0x9fc, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (AE23) cam1_data5.gpio4[19] */
		// defined below AM4372_IOPAD(0xa00, PIN_OUTPUT | MUX_MODE7) /* (AD23) cam1_data6.gpio4[20] */
		AM4372_IOPAD(0xa04, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (AE24) cam1_data7.gpio4[21] */
		AM4372_IOPAD(0xa10, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (Y18) cam0_data2.gpio4[24] */
		AM4372_IOPAD(0xa14, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (AA18) cam0_data3.gpio4[25] */
		AM4372_IOPAD(0xa18, PIN_OUTPUT | MUX_MODE7) /* (AE19) cam0_data4.gpio4[26] */
		AM4372_IOPAD(0xa1c, PIN_OUTPUT | MUX_MODE7) /* (AD19) cam0_data5.gpio4[27] */
		AM4372_IOPAD(0xa20, PIN_OUTPUT | MUX_MODE7) /* (AE20) cam0_data6.gpio4[28] */
		AM4372_IOPAD(0xa24, PIN_OUTPUT | MUX_MODE7) /* (AD20) cam0_data7.gpio4[29] */
	>;
};

&gpio5 {
	status = "okay";
	pinctrl-single,pins = <
		AM4372_IOPAD(0xa34, PIN_OUTPUT | MUX_MODE7) /* (K24) uart3_rtsn.gpio5[1] */
		AM4372_IOPAD(0xa2c, PIN_OUTPUT | MUX_MODE7) /* (H24) uart3_txd.gpio5[3] */
		// defined below AM4372_IOPAD(0xa38, PIN_OUTPUT | MUX_MODE7) /* (D25) gpio5_8.gpio5[8] */
		AM4372_IOPAD(0xa3c, PIN_INPUT_PULLUP | MUX_MODE7) /* (F24) gpio5_9.gpio5[9] */
		AM4372_IOPAD(0xa48, PIN_INPUT_PULLUP | MUX_MODE7) /* (E25) gpio5_12.gpio5[12] */
		AM4372_IOPAD(0xa74, PIN_INPUT_PULLUP | MUX_MODE9) /* (C24) xdma_event_intr1.gpio5[29] */
		AM4372_IOPAD(0x870, PIN_OUTPUT | MUX_MODE9) /* (A2) gpmc_wait0.gpio5[30] */
	>;
};

&tscadc {
	status = "okay";
	adc {
		ti,adc-channels = <0 1 2>;
	};
};

&mmc1 {
	status = "okay";
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&mmc0_pins_default>;
	pinctrl-1 = <&mmc0_pins_sleep>;
	vmmc-supply = <&v3_3d>;
	bus-width = <4>;
	cd-gpios = <&gpio0 6 GPIO_ACTIVE_LOW>;
};

&mmc2 {
	status = "okay";
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&mmc1_pins_default>;
	pinctrl-1 = <&mmc1_pins_sleep>;
	vmmc-supply = <&v3_3d>;
	bus-width = <8>;
	ti,non-removable;
	max-frequency = <96000000>;
	no-1-8-v;
	/delete-property/ mmc-hs200-1_8v;
};

&qspi {
	status = "okay";
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&qspi_pins_default>;
	pinctrl-1 = <&qspi_pins_sleep>;

	spi-max-frequency = <48000000>;
	m25p80@0 {
		compatible = "mx66l51235l";
		spi-max-frequency = <48000000>;
		reg = <0>;
		spi-cpol;
		spi-cpha;
		spi-tx-bus-width = <1>;
		spi-rx-bus-width = <4>;
		#address-cells = <1>;
		#size-cells = <1>;

		/*
		 * MTD partition table.  The ROM checks the first 512KiB for a
		 * valid file to boot(XIP).
		 */
		partition@0 {
			label = "QSPI.U_BOOT";
			reg = <0x00000000 0x000080000>;
		};
		partition@1 {
			label = "QSPI.U_BOOT.backup";
			reg = <0x00080000 0x00080000>;
		};
		partition@2 {
			label = "QSPI.U-BOOT-SPL_OS";
			reg = <0x00100000 0x00010000>;
		};
		partition@3 {
			label = "QSPI.U_BOOT_ENV";
			reg = <0x00110000 0x00010000>;
		};
		partition@4 {
			label = "QSPI.U-BOOT-ENV.backup";
			reg = <0x00120000 0x00010000>;
		};
		partition@5 {
			label = "QSPI.KERNEL";
			reg = <0x00130000 0x0800000>;
		};
		partition@6 {
			label = "QSPI.FILESYSTEM";
			reg = <0x00930000 0x36D0000>;
		};
	};
};

&mac_sw {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&cpsw_default>;
	pinctrl-1 = <&cpsw_sleep>;
	status = "okay";
};

&davinci_mdio_sw {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&davinci_mdio_default>;
	pinctrl-1 = <&davinci_mdio_sleep>;
};

&cpsw_port1 {
	phy-mode = "rgmii";
	ti,dual-emac-pvid = <1>;
	fixed-link {
		speed = <1000>;
		full-duplex;
	};      
};

&cpsw_port2 {
	status = "disabled";
};

&rtc {
	clocks = <&clk_32k_rtc>, <&clk_32768_ck>;
	clock-names = "ext-clk", "int-clk";
	status = "okay";
};

&wdt {
	status = "okay";
};

&cpu {
	cpu0-supply = <&dcdc2>;
};

&cpu0_opp_table {
	/*
	 * Supply voltage supervisor on board will not allow opp50 so
	 * disable it and set opp100 as suspend OPP.
	 */
	opp50-300000000 {
		status = "disabled";
	};

	opp100-600000000 {
		opp-suspend;
	};
};

&pruss1_mdio {
	pinctrl-0 = <&pruss1_mdio_default>;
	pinctrl-names = "default";
	status = "okay";

	reset-gpios = <&gpio4 20 GPIO_ACTIVE_LOW>;
	reset-delay-us = <2>;	/* PHY datasheet states 1uS min */

	pruss1_eth0_phy: ethernet-phy@0 {
		reg = <1>;
	};

	pruss1_eth1_phy: ethernet-phy@1 {
		reg = <3>;
	};
};
